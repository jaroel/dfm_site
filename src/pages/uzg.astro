---
import type { Recording } from '../uzg'
import DfmLayout from '../layouts/DfmLayout.astro'
import {UitzendingGemist} from '../components/uzg-listing'
import {UitzendingGemistPlayer} from '../components/uzg-player'

import type { FTP, IListingElement } from 'ftp-ts'
// // hack https://github.com/vitejs/vite/issues/9061#issuecomment-1203035009
import $FTP from 'ftp-ts'
const FTPClient: FTP = $FTP.default || $FTP
// // end hack

const ftpConnection = await FTPClient.connect({
  host: '86.81.98.192',
  user: 'UZG',
  password: '4862KpZ2',
})
const ftpListing = (await ftpConnection.list()).filter(
  (value): value is IListingElement => typeof value !== 'string'
)
ftpConnection.destroy()

const monthNamesUC = [
  'Januari',
  'Februari',
  'Maart',
  'April',
  'Mei',
  'Juni',
  'Juli',
  'Augustus',
  'September',
  'Oktober',
  'November',
  'December',
]

const monthNamesLC = [
  'januari',
  'februari',
  'maart',
  'april',
  'mei',
  'juni',
  'juli',
  'augustus',
  'september',
  'oktober',
  'november',
  'december',
]

const weekdayDisplayUC = [
  'Maandag',
  'Dinsdag',
  'Woensdag',
  'Donderdag',
  'Vrijdag',
  'Zaterdag',
  'Zondag',
]

const nameToDate = /(\d\d)-(\d\d)-(\d\d\d\d)-(\d\d)-(\d\d).mp3/

function only<T>(values: (T | undefined)[]): T[] {
  return values.filter((value) => typeof value !== 'undefined') as T[]
}

const listing = ftpListing.map((value) => {
  const parsedName = nameToDate
    .exec(value.name)
    ?.slice(1, 6)
    .map((value) => parseInt(value))

  if (!parsedName) return

  return {
    filename: value.name,
    day: parsedName[0] as number,
    month: parsedName[1] as number,
    monthIndex: (parsedName[1] as number) - 1,
    year: parsedName[2] as number,
    hour: parsedName[3] as number,
    minute: parsedName[4] as number,
  }
})

const recordings: Recording[] = only(listing)
  .map((value) => {
    const date = new Date(
      value.year,
      value.monthIndex,
      value.day,
      value.hour,
      value.minute
    )
    const weekday = date.getDay()
    return {
      ...value,
      date: date,
      monthDisplayUC: monthNamesUC[value.monthIndex] ?? '',
      monthDisplayLC: monthNamesLC[value.monthIndex] ?? '',
      weekday: weekday,
      weekdayDisplayUC: weekdayDisplayUC[weekday - 1] ?? '',
      url: `https://uitzendinggemist.dinxperfm.nl/fetch/${value.filename}`,
    }
  })
  .sort((a, b) => ((a.date || 0) >= (b.date || 0) ? -1 : 1))
---

<DfmLayout>
  <div class="bg-gray-100 text-black p-9">
    <div class="mx-auto">
      <div class="prose">
        <h1>Uitzending gemist</h1>
        <p>
          Dit zijn opnames van de Dinxper FM stream. Gebruik de speler om de
          uitzending terug te luisteren of klik de link om de uitzending op te
          slaan.
        </p>
        <UitzendingGemistPlayer client:only></UitzendingGemistPlayer>
        <UitzendingGemist client:visible recordings={recordings} />
      </div>
    </div>
  </div>
</DfmLayout>
